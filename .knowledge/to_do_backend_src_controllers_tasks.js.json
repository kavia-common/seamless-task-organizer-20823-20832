{"is_source_file": true, "format": "JavaScript", "description": "This is a source file defining a TasksController class for handling task-related HTTP endpoints in a RESTful API using Node.js and Express. It manages CRUD operations, marking tasks as complete/incomplete, and relies on a TaskService module for business logic.", "external_files": ["../services/taskService"], "external_methods": ["TaskService.list", "TaskService.get", "TaskService.create", "TaskService.update", "TaskService.remove", "TaskService.markComplete"], "published": ["TasksController"], "classes": [{"name": "TasksController", "description": "Controller class for handling HTTP requests related to tasks, providing endpoints for listing, retrieving, creating, updating, deleting, and toggling completion status."}], "methods": [{"name": "list(req, res)", "description": "Handles GET requests to list all tasks, with optional search parameters.", "scope": "TasksController", "scopeKind": "class"}, {"name": "get", "description": "Handles GET requests to retrieve a single task by ID."}, {"name": "create", "description": "Handles POST requests to create a new task."}, {"name": "update", "description": "Handles PUT or PATCH requests to update an existing task by ID."}, {"name": "remove", "description": "Handles DELETE requests to delete a task by ID."}, {"name": "complete", "description": "Marks a task as completed."}, {"name": "uncomplete", "description": "Marks a task as not completed."}, {"name": "parseId(param)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["TaskService.list", "TaskService.get", "TaskService.create", "TaskService.update", "TaskService.remove", "TaskService.markComplete"], "search-terms": ["TasksController", "task endpoints", "taskService", "CRUD tasks", "mark complete task", "task ID parsing"], "state": 2, "file_id": 17, "knowledge_revision": 36, "git_revision": "", "ctags": [{"_type": "tag", "name": "TaskService", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^const TaskService = require('..\\/services\\/taskService');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "TasksController", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^class TasksController {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "exports", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^module.exports = new TasksController();$/", "language": "JavaScript", "kind": "variable", "scope": "module", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const id = parseId(req.params.id);$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      if (!id) return res.status(400).json({ status: 'error', message: 'Invalid task id' });$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^  async list(req, res) {$/", "language": "JavaScript", "kind": "method", "signature": "(req, res)", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "parseId", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^function parseId(param) {$/", "language": "JavaScript", "kind": "function", "signature": "(param)"}, {"_type": "tag", "name": "req", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^  async get(req, res) {$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      if (!id) return res.status(400).json({ status: 'error', message: 'Invalid task id' });$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      if (!task) return res.status(404).json({ status: 'error', message: 'Task not found' });$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      return res.status(200).json({ status: 'ok', data: task });$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^  async get(req, res) {$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const result = await TaskService.remove(id);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const task = await TaskService.create(req.body);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const task = await TaskService.get(id);$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const task = await TaskService.markComplete(id, false);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const task = await TaskService.markComplete(id, true);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      const task = await TaskService.update(id, req.body);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20832/to_do_backend/src/controllers/tasks.js", "pattern": "/^      if (!task) return res.status(404).json({ status: 'error', message: 'Task not found' });$/", "language": "JavaScript", "kind": "field", "scope": "TasksController", "scopeKind": "class"}], "hash": "3ab715465d001b4c9f65911c580f7b0a", "format-version": 4, "code-base-name": "to_do_backend", "filename": "to_do_backend/src/controllers/tasks.js", "fields": [{"name": "module.exports = new TasksController();", "scope": "module", "scopeKind": "class", "description": "unavailable"}, {"name": "const id = parseId(req.params.id);", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}, {"name": "if (!id) return res.status(400).json({ status: 'error', message: 'Invalid task id' });", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}, {"name": "async get(req, res) {", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}, {"name": "if (!task) return res.status(404).json({ status: 'error', message: 'Task not found' });", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}, {"name": "return res.status(200).json({ status: 'ok', data: task });", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}, {"name": "const task = await TaskService.get(id);", "scope": "TasksController", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"36": ""}]}